/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
    };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            quick-tap-ms = <250>;
            require-prior-idle-ms = <0>;
            bindings = <&kp>, <&kp>;

            retro-tap;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp GRAVE  &kp Q  &kp W               &lt 7 E         &kp R           &kp T               &kp Y             &kp U            &kp I           &kp O               &kp P          &kp LEFT_BRACKET
&none      &kp A  &mt LEFT_CONTROL S  &mt LEFT_ALT D  &mt LEFT_GUI F  &mt LEFT_SHIFT G    &mt LEFT_SHIFT H  &mt LEFT_GUI J   &mt LEFT_ALT K  &mt LEFT_CONTROL L  &kp SEMICOLON  &kp SINGLE_QUOTE
&none      &kp Z  &kp X               &kp C           &kp V           &kp B               &kp N             &kp M            &kp COMMA       &kp DOT             &kp SLASH      &kp RIGHT_BRACKET
                                      &lt 3 ESCAPE    &lt 1 SPACE     &lt 2 TAB           &lt 5 ENTER       &lt 4 BACKSPACE  &lt 6 DELETE
            >;
        };

        layer1 {
            bindings = <
&none  &none  &none             &none         &none         &none             &kp LG(X)  &kp LG(C)      &kp LG(V)    &kp LG(Z)  &mt LEFT_SHIFT Z  &kp K_AGAIN
&none  &none  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &kp LEFT_SHIFT    &kp LEFT   &kp DOWN       &kp UP       &kp RIGHT  &kp CAPSLOCK      &none
&none  &none  &kp RIGHT_ALT     &none         &none         &none             &kp HOME   &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &kp INSERT        &none
                                &none         &none         &none             &kp ENTER  &kp BACKSPACE  &kp DELETE
            >;
        };

        layer2 {
            bindings = <
&none  &none  &none             &none         &none         &none             &none  &none  &none  &none  &none  &none
&none  &none  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &kp LEFT_SHIFT    &none  &none  &none  &none  &none  &none
&none  &none  &kp RIGHT_ALT     &none         &none         &none             &none  &none  &none  &none  &none  &none
                                &none         &none         &none             &none  &none  &none
            >;
        };

        layer3 {
            bindings = <
&none  &none  &none             &none         &none         &none             &none           &none                 &none                 &none       &none  &none
&none  &none  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &kp LEFT_SHIFT    &kp C_PREVIOUS  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp C_NEXT  &none  &none
&none  &none  &kp RIGHT_ALT     &none         &none         &none             &none           &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none       &none  &none
                                &none         &none         &none             &kp C_STOP      &kp C_PLAY_PAUSE      &kp C_MUTE
            >;
        };

        layer4 {
            bindings = <
&none  &kp RIGHT_BRACKET  &kp N7  &kp N8   &kp N9  &kp LEFT_BRACKET    &none           &none         &none         &none             &none  &none
&none  &kp SINGLE_QUOTE   &kp N4  &kp N5   &kp N6  &kp EQUAL           &kp LEFT_SHIFT  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &none  &none
&none  &kp GRAVE          &kp N1  &kp N2   &kp N3  &kp BACKSLASH       &none           &none         &none         &kp RIGHT_ALT     &none  &none
                                  &kp DOT  &kp N0  &kp MINUS           &none           &none         &none
            >;
        };

        layer5 {
            bindings = <
&none  &kp RIGHT_BRACE    &kp AMPERSAND    &kp ASTERISK          &kp LEFT_PARENTHESIS   &kp LEFT_BRACE    &none           &none         &none         &none             &none  &none
&none  &kp DOUBLE_QUOTES  &kp DOLLAR       &kp PERCENT           &kp CARET              &kp PLUS          &kp LEFT_SHIFT  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &none  &none
&none  &kp TILDE          &kp EXCLAMATION  &kp AT_SIGN           &kp HASH               &kp PIPE          &none           &none         &none         &kp RIGHT_ALT     &none  &none
                                           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS         &none           &none         &none
            >;
        };

        layer6 {
            bindings = <
&none  &kp F12  &kp F7  &kp F8             &kp F9     &kp PRINTSCREEN    &none           &none         &none         &none             &none  &none
&none  &kp F11  &kp F4  &kp F5             &kp F6     &kp SCROLLLOCK     &kp LEFT_SHIFT  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &none  &none
&none  &kp F10  &kp F1  &kp F2             &kp F3     &kp PAUSE_BREAK    &none           &none         &none         &kp RIGHT_ALT     &none  &none
                        &kp K_APPLICATION  &kp SPACE  &kp TAB            &none           &none         &none
            >;
        };

        layer7 {
            bindings = <
&none  &none  &none  &none  &none       &none                    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none       &kp LC(EQUAL)            &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none       &kp RC(RS(BACKSLASH))    &none  &none  &none  &none  &none  &none
                     &none  &kp LC(N0)  &kp LC(MINUS)            &none  &none  &none
            >;
        };
    };
};
